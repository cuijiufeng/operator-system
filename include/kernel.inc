; 2020年07月17日 10:02:10
; kernel用到的常量数据及导入导出标号
;==================================================================================================

;导出
global	_start						;导出_start
global hwint00
global hwint01
global hwint02
global hwint03
global hwint04
global hwint05
global hwint06
global hwint07
global hwint08
global hwint09
global hwint10
global hwint11
global hwint12
global hwint13
global hwint14
global hwint15
global divideError
global singleStepException
global nmi
global breakpointException
global overflow
global boundsCheck
global invalOpcode
global coprNotAvailable
global doubleFault
global coprSegOverrun
global invalTss
global segmentNotPresent
global stackException
global generalProtection
global pageFault
global coprError

extern STACK_TOP
extern restart
extern restart_reenter

;导入(声明)
extern	GDT_PTR						;gdtr寄存器的值
extern	IDT_PTR
extern	TSS
extern	IRQ_TABLE
extern	K_RE_ENTRY
extern	P_PROCESS_READY

extern	cinit
extern	cmain
extern	syserrHandler

;==================================================================================================================
;	s_process结构体中各个成员的相对偏移量
;------------------------------------------------------------------------------------------------------------------
P_STACKBASE		equ	0
GSREG			equ	P_STACKBASE
FSREG			equ	GSREG		+ 4
ESREG			equ	FSREG		+ 4
DSREG			equ	ESREG		+ 4
EDIREG			equ	DSREG		+ 4
ESIREG			equ	EDIREG		+ 4
EBPREG			equ	ESIREG		+ 4
KERNELESPREG	equ	EBPREG		+ 4
EBXREG			equ	KERNELESPREG+ 4
EDXREG			equ	EBXREG		+ 4
ECXREG			equ	EDXREG		+ 4
EAXREG			equ	ECXREG		+ 4

RETADR			equ	EAXREG		+ 4

EIPREG			equ	RETADR		+ 4
CSREG			equ	EIPREG		+ 4
EFLAGSREG		equ	CSREG		+ 4
ESPREG			equ	EFLAGSREG	+ 4
SSREG			equ	ESPREG		+ 4
;------------------------------------------------------------------------------------------------------------------
P_STACKTOP		equ	SSREG		+ 4			;栈顶
P_LDT_SEL		equ	P_STACKTOP				;LDT_SELECTOR的相对偏移量
P_LDT			equ	P_LDT_SEL	+ 4			;LDT的相对偏移量
;------------------------------------------------------------------------------------------------------------------
;==================================================================================================================

;==================================================================================================================
TSS3_S_SP0		equ	4						;TSS中的esp0的相对偏移量
;==================================================================================================================

;==================================================================================================================
EOI				equ	20H						;ocw2,中断结束控制字
INT_M_CTL		equ	20H						;主8259的偶地址端口20H
INT_M_CTLMASK	equ	21H						;主8259的奇地址端口21H
INT_S_CTL		equ	0A0H					;从8259的偶地址端口A0H
INT_S_CTLMASK	equ	0A1H					;从8259的偶地址端口A1H
;==================================================================================================================

;==================================================================================================================
; 以下选择子值必须与 protect.h 中保持一致!!!
SELECTOR_KERNEL_CS	equ		0x08				; LOADER 里面已经确定了的.
SELECTOR_TSS		equ		0x20				; TSS. 从外层跳到内存时 SS 和 ESP 的值从里面获得.
;==================================================================================================================